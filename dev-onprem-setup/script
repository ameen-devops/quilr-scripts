all yamls deployment first

zookeeper
kafka
kafkaui
neo4j

sudo crictl rmi docker.io/bitnami/kafka:3.5.1
sudo crictl rmi docker.io/bitnamilegacy/zookeeper:3.9.0
sudo crictl rmi docker.io/library/neo4j:5.25.1-community
sudo crictl rmi docker.io/provectuslabs/kafka-ui:latest

sudo crictl rmi docker.io/bitnami/kafka:3.5.1
sudo crictl rmi docker.io/bitnamilegacy/zookeeper:3.9.0
sudo crictl rmi docker.io/library/neo4j:5.25.1-community
sudo crictl rmi docker.io/provectuslabs/kafka-ui:latest
WARN[0000] Config "/etc/crictl.yaml" does not exist, trying next: "/usr/bin/crictl.yaml"
WARN[0000] Image connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead.
Deleted: docker.io/bitnami/kafka:3.5.1
WARN[0000] Config "/etc/crictl.yaml" does not exist, trying next: "/usr/bin/crictl.yaml"
WARN[0000] Image connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead.
Deleted: docker.io/bitnamilegacy/zookeeper:3.9.0
WARN[0000] Config "/etc/crictl.yaml" does not exist, trying next: "/usr/bin/crictl.yaml"
WARN[0000] Image connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead.
Deleted: docker.io/library/neo4j:5.25.1
Deleted: docker.io/library/neo4j:5.25.1-community
WARN[0000] Config "/etc/crictl.yaml" does not exist, trying next: "/usr/bin/crictl.yaml"
WARN[0000] Image connect using default endpoints: [unix:///run/containerd/containerd.sock unix:///run/crio/crio.sock unix:///var/run/cri-dockerd.sock]. As the default settings are now deprecated, you should set the endpoint instead.
Deleted: docker.io/provectuslabs/kafka-ui:latest

----------------------------------------------------------

kafka  ---> yaml
zookeeper ---> yaml
kafkaui ---> yaml
vault  ----> helm bankvaults

neo4j ---> yaml
redis  ---> helm bitnami
postgres ---> helm bitnami
elasticsearch ---> helm bitnami

process:
---------------
download images
tar the images 
download helm charts / pull the helm charts with specific version
install the helm charts
custom values.yaml make it

sudo crictl images

plugin install
how to see which images are there through helm commands with the chart
download those images
pull the helm charts 
install the component

versions: ( in preprod )
-------------------------------
redis- 20.11.5, chart-7.4.2

helm plugin install https://github.com/nikhilsbhat/helm-images
helm images get oci://registry-1.docker.io/bitnamicharts/redis --output table
helm images get oci://registry-1.docker.io/bitnamicharts/redis --version 20.11.5 --output table
mkdir redis && cd redis
nano redis-values.yaml
sudo ctr -n k8s.io images pull  docker.io/bitnami/redis:7.4.2-debian-12-r6
helm pull oci://registry-1.docker.io/bitnamicharts/redis --version 20.11.5 
tar -xvzf redis-20.11.5.tgz
cd redis

helm upgrade --install redis ./redis-20.11.5.tgz \
  -f redis-values.yaml \
  -n quilr

helm upgrade --install redis ./redis \
  -f ../redis-values.yaml \
  -n quilr

sudo mkdir -p /home/quilradmin/quilr-data/kafka/
sudo mkdir -p /home/quilradmin/quilr-data/zookeeper/
sudo chmod -R 755 /home/quilradmin/quilr-data/kafka
sudo chmod -R 755 /home/quilradmin/quilr-data/zookeeper

kubectl apply -f zookeeper.yaml -n quilr
kubectl apply -f kafka.yaml -n quilr
kubectl apply -f kafkaui.yaml -n quilr

 sudo mkdir -p /home/quilradmin/quilr-data/neo4j/data
 sudo mkdir -p /home/quilradmin/quilr-data/neo4j/conf
 sudo mkdir -p /home/quilradmin/quilr-data/neo4j/plugins
 sudo chown -R 7474:7474 /home/quilradmin/quilr-data/neo4j
 sudo chmod -R 755 /home/quilradmin/quilr-data/neo4j

mkdir neo4j && cd neo4j
wget https://github.com/neo4j/apoc/releases/download/5.25.1/apoc-5.25.1-core.jar
sudo cp apoc-5.25.1-core.jar /home/quilradmin/quilr-data/neo4j/plugins/
sudo chown 7474:7474 /home/quilradmin/quilr-data/neo4j/plugins/apoc-5.25.1-core.jar

kubectl apply -f neo4j-pv.yaml -n quilr
kubectl apply -f neo4j.yaml -n quilr

kubectl create configmap quilr-initdb-scripts \
  --from-file=init-scripts/ \
  -n quilr

sudo chown -R 1001:1001 /home/quilradmin/quilr-data/elasticsearch
sudo chmod -R 775 /home/quilradmin/quilr-data/elasticsearch

sudo ctr -n k8s.io images pull  docker.io/bitnami/kafka:3.5.1  ----> image in yaml
#sudo ctr -n k8s.io images pull  docker.io/bitnami/zookeeper:3.9.0 
sudo ctr -n k8s.io images pull  docker.io/bitnamilegacy/zookeeper:3.9.0 ----> image in yaml
sudo ctr -n k8s.io images pull  provectuslabs/kafka-ui:latest ----> image in yaml
sudo ctr -n k8s.io images pull ghcr.io/bank-vaults/vault-operator:v1.23.0 
sudo ctr -n k8s.io images pull ghcr.io/bank-vaults/bank-vaults:v1.32.0 
sudo ctr -n k8s.io images pull hashicorp/vault:1.14.8
sudo ctr -n k8s.io images pull  ubuntu:bionic 
sudo ctr -n k8s.io images pull docker.io/library/neo4j:5.25.1-community
sudo ctr -n k8s.io images pull docker.io/bitnami/redis:8.2.1-debian-12-r0
sudo ctr -n k8s.io images pull docker.io/bitnami/postgresql:17.6.0-debian-12-r0
sudo ctr -n k8s.io images pull docker.io/bitnami/elasticsearch:9.1.2-debian-12-r0
sudo ctr -n k8s.io images pull docker.io/bitnami/os-shell:12-debian-12-r50
