1. Ports exposed by the ClickHouse service

Your service quilr-clickhouse has multiple ports:

8123 ‚Üí HTTP interface (ClickHouse HTTP API)

9000 ‚Üí Native TCP protocol (used by JDBC / clients like clickhouse-client) ‚úÖ

9004, 9005, 9009 ‚Üí internal replication / inter-server communication

The port you need for DW_URL inside the cluster is 9000.

2. Inside cluster vs. outside cluster

Inside the EKS cluster
You should connect via the headless service:

jdbc:clickhouse://quilr-clickhouse-headless.quilr.svc.cluster.local:9000/default


or the regular service:

jdbc:clickhouse://quilr-clickhouse.quilr.svc.cluster.local:9000/default


Outside the cluster
You‚Äôd either:

Use the LoadBalancer DNS:

jdbc:clickhouse://internal-a1d304a003eb641a28ea371e911a6bc1-22548389.us-east-1.elb.amazonaws.com:9000/default


Or port-forward:

jdbc:clickhouse://localhost:9000/default

3. Final inside-cluster environment variables

Here‚Äôs the set you need:

"DW_NAME": "clickhouse",
"DW_USER": "quilradmin",
"DW_PASSWORD": "QU1lr$F345#we",
"DW_URL": "jdbc:clickhouse://quilr-clickhouse.quilr.svc.cluster.local:9000/default"


‚úÖ Answer: Use port 9000 for DW_URL when routing inside the cluster.

Do you also want me to show you how to configure your app to automatically switch between internal (9000, service DNS) and external (LoadBalancer) URLs, so it works both inside and outside the cluster?

You said:
default?ssl=true is this needed also as im deploying clickhouse inside a container
ChatGPT said:

Good question üëå ‚Äî that ?ssl=true piece trips up a lot of folks.

1. What ?ssl=true does

When you add ?ssl=true in the JDBC URL:

jdbc:clickhouse://host:9000/default?ssl=true


it forces the driver to use TLS/SSL encryption for the connection.
That only works if the ClickHouse server is configured with SSL certificates and listening on TLS-enabled ports.

2. Your deployment details

You installed ClickHouse using the Bitnami Helm chart with default settings.

You did not set --set tls.enabled=true (or provide certs).

The service shows only plain ports (8123, 9000, etc.), no TLS-wrapped endpoints.

üëâ That means your ClickHouse is running without SSL.

3. Correct URL for your case

So, for your current deployment inside EKS:

"DW_URL": "jdbc:clickhouse://quilr-clickhouse.quilr.svc.cluster.local:9000/default"


(no ?ssl=true needed)

4. When you would need ?ssl=true

If you deploy ClickHouse Cloud (managed ClickHouse) ‚Üí it enforces TLS.

If you enable TLS in your Helm deployment:

helm upgrade quilr bitnami/clickhouse \
  -n quilr \
  --set tls.enabled=true \
  --set tls.autoGenerated=true


Then your service would expose port 9440 (ClickHouse native TLS port), and the JDBC URL would become:

jdbc:clickhouse://quilr-clickhouse.quilr.svc.cluster.local:9440/default?ssl=true


‚úÖ Answer: Since you deployed ClickHouse inside EKS with no TLS configured, you should NOT use ?ssl=true.
Use plain jdbc:clickhouse://...:9000/default.

Do you want me to also show you how to enable TLS in your Helm deployment so you can safely connect from outside the cluster over the internet?

You said:
also my manager deployed clickhouse in aws and he used this dw url which has different port......DW_URL: 'jdbc:clickhouse://oy237b2yd4.us-east-2.aws.clickhouse.cloud:8443/default?ssl=true'.........im using 9000 port as clickhouse deployed inside container is it correct then
ChatGPT said:

Exactly ‚Äî you‚Äôve nailed it üí°.

Here‚Äôs why the URLs look different:

1. Your manager‚Äôs deployment (ClickHouse Cloud)

URL:

jdbc:clickhouse://oy237b2yd4.us-east-2.aws.clickhouse.cloud:8443/default?ssl=true


8443 is the managed cloud service port that ClickHouse Cloud uses for encrypted connections.

It enforces TLS, so ?ssl=true is required.

This is the ‚Äúhosted SaaS‚Äù version of ClickHouse ‚Äî they control networking and certificates.

2. Your deployment (Helm inside EKS)

Service:

jdbc:clickhouse://quilr-clickhouse.quilr.svc.cluster.local:9000/default


9000 is the default native TCP port for ClickHouse when running in containers or VMs (no TLS by default).

Since you didn‚Äôt enable tls.enabled=true in your Helm chart, SSL is not active, so no ?ssl=true.

3. Why the difference

ClickHouse Cloud ‚Üí 8443 (TLS enforced)

Self-managed ClickHouse (Helm, EKS, Docker, bare metal) ‚Üí 9000 (plain TCP), unless you configure TLS (then usually 9440).

So yes ‚úÖ, you‚Äôre 100% correct to use port 9000 for your in-cluster deployment.

4. Quick reference table
Deployment type	Port	SSL needed?	Example URL
ClickHouse Cloud	8443	Yes	jdbc:clickhouse://host:8443/default?ssl=true
Self-managed default	9000	No	jdbc:clickhouse://host:9000/default
Self-managed + TLS	9440	Yes	jdbc:clickhouse://host:9440/default?ssl=true

‚úÖ Answer:
Since your ClickHouse is deployed in EKS via Helm, port 9000 without ?ssl=true is correct.
Your manager‚Äôs deployment uses AWS ClickHouse Cloud, which requires 8443 with SSL.

Do you want me to also show you how to enable TLS (9440 + ?ssl=true) in your Helm setup, so it matches the security posture of your manager‚Äôs ClickHouse Cloud?
